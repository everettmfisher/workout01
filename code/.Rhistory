hist(nba$salary)
nba$salary2 = nba$salary / 1000000
hist(nba$salary2)
# the log-transformed histogram is more symmetrical than the salary2 histogram, and the log transformation introduces a skew left rather than right. The transformed data are clustered around 1
nba$salary2log <- log(nba$salary2)
hist(nba$salary2log)
low <- nba$salary2log[nba$salary2log < -3]
size(low)
length(low)
list(nba$player[low], nba$weight[low], nba$height[low], nba$team[low], nba$position[low])
data.frame(nba$player[low], nba$weight[low], nba$height[low], nba$team[low], nba$position[low])
data.frame(nba$player[[low]], nba$weight[[low]], nba$height[[low]], nba$team[[low]], nba$position[[low]])
min(nba$salary)
max(nba$salary)
mean(nba$salary)
median(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary / 1000000
hist(nba$salary2)
nba$salary2log <- log(nba$salary2)
# the log-transformed histogram is more symmetrical than the salary2 histogram, and the log transformation introduces a skew left rather than right. The transformed data are clustered around 1
hist(nba$salary2log)
nba$low <- nba$salary2log[nba$salary2log < -3]
min(nba$salary)
max(nba$salary)
mean(nba$salary)
median(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary / 1000000
hist(nba$salary2)
nba$salary2log <- log(nba$salary2)
# the log-transformed histogram is more symmetrical than the salary2 histogram, and the log transformation introduces a skew left rather than right. The transformed data are clustered around 1
hist(nba$salary2log)
low <- nba$salary2log[nba$salary2log < -3]
length(low)
data.frame(nba$player[low], nba$weight[low], nba$height[low], nba$team[low], nba$position[low]])
min(nba$salary)
max(nba$salary)
mean(nba$salary)
median(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary / 1000000
hist(nba$salary2)
nba$salary2log <- log(nba$salary2)
# the log-transformed histogram is more symmetrical than the salary2 histogram, and the log transformation introduces a skew left rather than right. The transformed data are clustered around 1
hist(nba$salary2log)
low <- nba$salary2log[nba$salary2log < -3]
length(low)
data.frame(nba$player[low], nba$weight[low], nba$height[low], nba$team[low], nba$position[low])
data.frame(nba$player[nba$salary2log %in% low], nba$weight[nba$salary2log %in% low], nba$height[nba$salary2log %in% low], nba$team[nba$salary2log %in% low], nba$position[nba$salary2log %in% low])
nba <- nba[-nba$salary2log %in% low, ]
nba
library(knitr)
min(nba$salary)
max(nba$salary)
mean(nba$salary)
median(nba$salary)
hist(nba$salary)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
data_types <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer", "integer", "integer", "integer", "integer")
nba <- read.csv(datafile, header = TRUE, colClasses = data_types)
nba2 <- read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
min(nba$salary)
max(nba$salary)
mean(nba$salary)
median(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary / 1000000
hist(nba$salary2)
nba$salary2log <- log(nba$salary2)
# the log-transformed histogram is more symmetrical than the salary2 histogram, and the log transformation introduces a skew left rather than right. The transformed data are clustered around 1
hist(nba$salary2log)
low <- nba$salary2log[nba$salary2log < -3]
length(low)
data.frame(nba$player[nba$salary2log %in% low], nba$weight[nba$salary2log %in% low], nba$height[nba$salary2log %in% low], nba$team[nba$salary2log %in% low], nba$position[nba$salary2log %in% low])
nba[nba$salarylog2 %in% low, ]
nba[nba$salarylog2 %in% low, ]
nba[-(nba$salarylog2 %in% low), ]
nbalow <- data.frame(nba$player[nba$salary2log %in% low], nba$weight[nba$salary2log %in% low], nba$height[nba$salary2log %in% low], nba$team[nba$salary2log %in% low], nba$position[nba$salary2log %in% low])
nba[-nbalow, ]
data.frame(nba$player[nba$salary2log %in% low], nba$weight[nba$salary2log %in% low], nba$height[nba$salary2log %in% low], nba$team[nba$salary2log %in% low], nba$position[nba$salary2log %in% low])
nba[!(nba$salarylog2 %in% low), ]
nba[!(nba$salary2log %in% low), ]
nba <- nba[!(nba$salary2log %in% low), ]
View(nba)
View(nba)
min(nba2$points)
max(nba2$points)
mean(nba2$points)
median(nba2$points)
hist(nba2$points)
min(nba$points)
max(nba$points)
mean(nba$points)
median(nba$points)
hist(nba$points)
0.1 <- nba$points[nba$points == 0]
nba$points = 0.1 <- nba$points[nba$points == 0]
nba$points[nba$points == 0] <- 0.1
View(nba)
View(nba)
nba$pointslog <- log(nba$points)
hist(nba$pointslog)
library(knitr)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
install.packages(readr)
install.packages("readr")
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
library(knitr)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
install.packages("readr")
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
install.packages("readr")
install.packages("readroper")
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
library(knitr)
library(readr)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = cols("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer"))
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = cols("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
dat
library(knitr)
library(readr)
library(dplyr)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = cols("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
summarize(
group_by(dat, team),
total_salary = sum(salary),
mean_salary = mean(salary),
median_salary = median(salary)
)
team salaries <- summarize(
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary),
mean_salary = mean(salary),
median_salary = median(salary)
)
team_salaries <- team_salaries / 1000000
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries
team_salaries <- arrange(team_salaries, desc(total_salary))
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries <- arrange(team_salaries, desc(total_salary))
as.data.frame(team_salaries)
library(knitr)
library(readr)
library(dplyr)
library(ggplot2)
# barchart of total salary by team
ggplot(team_salaries, aes(total_salary)) + geom_bar(stat = "identity") + coord_flip()
# barchart of total salary by team
ggplot(team_salaries, aes(team, total_salary)) + geom_col(stat = "identity") + coord_flip()
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries <- arrange(team_salaries, desc(total_salary))
as.data.frame(team_salaries)
# barchart of total salary by team
ggplot(team_salaries, aes(team, total_salary)) + geom_col(stat = "identity") + coord_flip()
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries <- arrange(team_salaries, desc(total_salary))
as.data.frame(team_salaries)
# barchart of total salary by team
ggplot(team_salaries, aes(team, total_salary)) + geom_col(stat = "identity") + coord_flip()
# barchart of total salary by team
ggplot(team_salaries, aes(team, total_salary)) + geom_col() + coord_flip()
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, -total_salary), y = total_salary)) + geom_col() + coord_flip()
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip()
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(x = "Total Salary ($ millions)", y = "Team", title = "Total NBA Salaries by Team")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(aes(mean(select(team_salaries, total_salary))))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(aes(xintercept = mean(select(team_salaries, total_salary))))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(aes(xintercept = mean(team_salaries$total_salary)))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(aes(xintercept = mean(total_salary)))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(xintercept = mean(total_salary), color = "red")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_vline(xintercept = mean(team_salaries$total_salary), color = "red")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + annotate(geom="Average total salary", x = 25, y = mean(team_salaries$total_salary + 1)
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + annotate(geom="Average total salary", x = 25, y = mean(team_salaries$total_salary + 1)
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + annotate(geom="Average total salary", x = 25, y = mean(team_salaries$total_salary + 1)
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + annotate(geom="Average total salary", x = 25, y = mean(team_salaries$total_salary + 1))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + annotate(geom="geom_hline", x = 25, y = mean(team_salaries$total_salary + 1))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(0, mean(team_salaries$total_salary))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(0, mean(team_salaries$total_salary))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(0, mean(team_salaries$total_salary))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(0, mean(team_salaries$total_salary)))
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(25, mean(team_salaries$total_salary)), label = "Average total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(0, mean(team_salaries$total_salary)), label = "Average total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(2, mean(team_salaries$total_salary)), label = "Average total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(4, mean(team_salaries$total_salary) + 4), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 4), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 15), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 20), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "Total NBA Salaries by Team") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total salary")
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "NBA Teams Ranked by Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total salary")
team_points <- summarize(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)
)
team_points <- arrange(team_points, desc(total_points))
as.data.frame(team_points)
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total points")
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 10), label = "Mean total points")
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 100), label = "Mean total points")
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 1000), label = "Mean total points")
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 500), label = "Mean total points")
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 700), label = "Mean total points")
left_join(team_salaries, team_points)
points_salary <- inner_join(team_salaries, team_points)
points_salary <- inner_join(team_salaries, team_points, by = "team")
points_salary
library(knitr)
library(readr)
library(dplyr)
library(ggplot2)
points_salary <- inner_join(team_salaries, team_points, by = "team")
library(knitr)
library(readr)
library(dplyr)
library(ggplot2)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = cols("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries <- arrange(team_salaries, desc(total_salary))
as.data.frame(team_salaries)
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "NBA Teams Ranked by Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total salary")
team_points <- summarize(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)
)
team_points <- arrange(team_points, desc(total_points))
as.data.frame(team_points)
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 700), label = "Mean total points")
points_salary <- inner_join(team_salaries, team_points, by = "team")
summary(points_salary)
points_salary <- mutate(points_salary, cost_point = total_salary / total_points)
summary(select(points_Salary, cost_point))
summary(select(points_salary, cost_point))
points_salary <- inner_join(team_salaries, team_points, by = "team")
summary(points_salary)
points_salary <- mutate(points_salary, cost_point = (total_salary / total_points) * 1000000)
summary(select(points_salary, cost_point))
# barchart of cost per point by team
ggplot(team_points, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(team_points$cost_point), color = "red") + geom_text(aes(x = 4, y = median(team_points$total_points) + 700), label = "Median cost per point")
points_salary <- inner_join(team_salaries, team_points, by = "team")
summary(points_salary)
points_salary <- mutate(points_salary, cost_point = (total_salary / total_points) * 1000000)
summary(select(points_salary, cost_point))
# barchart of cost per point by team
ggplot(team_points, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(team_points$cost_point), color = "red") + geom_text(aes(x = 4, y = median(team_points$total_points) + 700), label = "Median cost per point")
# barchart of cost per point by team
ggplot(team_points, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(team_points$cost_point), color = "red") + geom_text(aes(x = 4, y = median(team_points$cost_point) + 700), label = "Median cost per point")
# barchart of cost per point by team
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(poinst_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
# barchart of cost per point by team
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
library(knitr)
library(readr)
library(dplyr)
library(ggplot2)
datafile <- "https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv"
dat <- read_csv(datafile, col_names = TRUE, col_types = cols("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
team_salaries <- summarize(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000
)
team_salaries <- arrange(team_salaries, desc(total_salary))
as.data.frame(team_salaries)
# barchart of total salary by team
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_col() + coord_flip() + labs(y = "Total Salary ($ millions)", x = "Team", title = "NBA Teams Ranked by Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") + geom_text(aes(x = 4, y = mean(team_salaries$total_salary) + 10), label = "Mean total salary")
team_points <- summarize(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)
)
team_points <- arrange(team_points, desc(total_points))
as.data.frame(team_points)
# barchart of total points by team
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_col() + coord_flip() + labs(y = "Total Points", x = "Team", title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), color = "red") + geom_text(aes(x = 4, y = mean(team_points$total_points) + 700), label = "Mean total points")
points_salary <- inner_join(team_salaries, team_points, by = "team")
summary(points_salary)
points_salary <- mutate(points_salary, cost_point = (total_salary / total_points) * 1000000)
summary(select(points_salary, cost_point))
# barchart of cost per point by team
points_salary <- mutate(points_salary, percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1)))
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile)))
View(points_salary)
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
View(points_salary)
View(points_salary)
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, color = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(Points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, color = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = "Median cost per point") + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = print("Median cost per point:", median(points_salary$cost_point) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = print("Median cost per point:", median(points_salary$cost_point)) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = c("Median cost per point:", median(points_salary$cost_point)) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = paste("Median cost per point:", median(points_salary$cost_point), collapse = " ") + theme_bw()
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = paste("Median cost per point:", median(points_salary$cost_point), collapse = " ") + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = paste("Median cost per point:", median(points_salary$cost_point), collapse = " ")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = paste("Median cost per point: $", median(points_salary$cost_point), collapse = "")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 700), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point) + 1400), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point)), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point)), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant))
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25th percentile", "25-50th percentile", "50-75th percentile", ">75th percentile")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point)), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + theme_bw()
View(points_salary)
View(points_salary)
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant)) + geom_text(aes(label = team))
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant)) + geom_text(aes(label = team, y = median_salary + .1))
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant, size = 20)) + geom_text(aes(label = team, y = median_salary + .2))
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant, size = 20)) + geom_text(aes(label = team, y = median_salary + .2)) + labs( x = "Median points scored per team", y = "Median salary per team", title = "NBA Points vs. Salary", caption = "Colored by team's cost per point quantile")
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant, size = 20)) + geom_text(aes(label = team, y = median_salary + .2)) + labs( x = "Median points scored per team", y = "Median salary per team", title = "NBA Points vs. Salary", caption = "Colored by team's cost per point quantile") +guides(size = FALSE)
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant, size = 20)) + geom_text(aes(label = team, y = median_salary + .2)) + labs( x = "Median points scored per team", y = "Median salary per team", title = "NBA Points vs. Salary", caption = "Colored by team's cost per point quantile") + guides(size = FALSE, color = guide_legend(title = "Cost per point quantiles"))
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25", "25-50", "50-75", ">75")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point)), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + guides(color = guide_legend(title = "Cost per point percentiles")) + theme_bw()
# barchart of cost per point by team
percentile = quantile(points_salary$cost_point, probs = c(0, 0.25, 0.5, 0.75, 1))
points_salary <- mutate(points_salary, cost_quant = factor(findInterval(points_salary$cost_point, percentile, all.inside = TRUE)))
levels(points_salary$cost_quant) <- c("<25", "25-50", "50-75", ">75")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point, fill = cost_quant)) + geom_col() + coord_flip() + labs(y = "Cost per Point ($)", x = "Team", title = "Cost per Point Scored by NBA Teams") + geom_hline(yintercept = median(points_salary$cost_point), color = "red") + geom_text(aes(x = 4, y = median(points_salary$cost_point)), label = paste("Median cost per point: $", as.integer(median(points_salary$cost_point)), collapse = "")) + guides(fill = guide_legend(title = "Cost per point percentiles")) + theme_bw()
# plot of median salary vs. median points scored, colored by quantile of team's cost per point
ggplot(points_salary, aes(x = median_points, y= median_salary)) + geom_point(aes(color = cost_quant, size = 20)) + geom_text(aes(label = team, y = median_salary + .2)) + labs( x = "Median points scored per team", y = "Median salary per team", title = "NBA Points vs. Salary", caption = "Colored by team's cost per point quantile") + guides(size = FALSE, color = guide_legend(title = "Cost per point percentiles"))
knitr::opts_chunk$set(echo = TRUE)
library(c(dplyr, readr))
library(dplyr)
library(readr)
iguodala <- read_csv("../data/andre-iguodala.csv")
getSrcDirectory()[1]
getSrcDirectory(make-shots-data-script.R)[1]
setwd("~/School/Spring 2019/Stat 133/workout01/code")
iguodala <- read_csv("../data/andre-iguodala.csv")
green <- read_csv("../data/graymond-green.csv")
curry <- read_csv("../data/stephen-curry.csv")
problems(...)
View(curry)
green <- read_csv("../data/draymond-green.csv")
library(readr)
thompson <- read_csv("../data/klay-thompson.csv")
iguodala <- read_csv("../data/andre-iguodala.csv")
green <- read_csv("../data/draymond-green.csv")
durant <- read_csv("../data/kevin-durant.csv")
thompson <- read_csv("../data/klay-thompson.csv")
curry <- read_csv("../data/stephen-curry.csv")
curry
head(curry)
View(curry)
iguodala <- read_csv("../data/andre-iguodala.csv", col_types = "fDffiiffficii")
iguodala <- read_csv("../data/andre-iguodala.csv")
iguodala <- read_csv("../data/andre-iguodala.csv", col_types = ", col_types = "fDffiiffficii")
iguodala <- read_csv("../data/andre-iguodala.csv", col_types = "fDffiiffficii")
iguodala <- read_csv("../data/andre-iguodala.csv", col_types = "fcffiiffficii")
iguodala <- read_csv("../data/andre-iguodala.csv", col_types = "fcffiiffficii")
green <- read_csv("../data/draymond-green.csv", col_types = "fcffiiffficii")
green <- read_csv("../data/draymond-green.csv", col_types = "fcffiiffficii")
durant <- read_csv("../data/kevin-durant.csv", col_types = "fcffiiffficii")
thompson <- read_csv("../data/klay-thompson.csv", col_types = "fcffiiffficii")
curry <- read_csv("../data/stephen-curry.csv", col_types = "fcffiiffficii")
View(durant)
mutate(curry, name = "Stephen Curry")
mutate(curry, name = "Stephen Curry")$name
iguodala <- mutate(iguodala, name = "Andre Iguodala")
green <- mutate(green, name = "Draymond Green")
durant <- mutate(durant, name = "Kevin Durant")
thompson <- mutate(thompson, name = "Klay Thompson")
curry <- mutate(curry, name = "Stephen Curry")
View(curry)
View(curry)
